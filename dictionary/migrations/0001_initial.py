# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-17 02:05


from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('role', models.CharField(choices=[('general', 'General Definition'), ('noun', 'As a Noun'), ('verb', 'As a Verb or Adjective'), ('deictic', 'As a Pointing Sign'), ('interact', 'Interactive'), ('modifier', 'As Modifier'), ('question', 'As Question'), ('popexplain', 'Popular Explanation'), ('augment', 'Augmented Meaning'), ('note', 'Note'), ('privatenote', 'Private Note'), ('B92 sn', 'Sign Number in Brien 92')], max_length=20)),
                ('count', models.IntegerField()),
                ('published', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['gloss', 'role', 'count'],
            },
        ),
        migrations.CreateModel(
            name='Dialect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['language', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Gloss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idgloss', models.CharField(help_text='\n    This is the unique identifying name of an entry of a sign form in the\ndatabase. No two Sign Entry Names can be exactly the same, but a "Sign\nEntry Name" can be (and often is) the same as the Annotation Idgloss.', max_length=50, verbose_name='ID Gloss')),
                ('annotation_idgloss', models.CharField(blank=True, help_text="\n    This is the name of a sign used by annotators when glossing the corpus in\nan ELAN annotation file. The Annotation Idgloss may be the same for two or\nmore entries (each with their own 'Sign Entry Name'). If two sign entries\nhave the same 'Annotation Idgloss' that means they differ in form in only\nminor or insignificant ways that can be ignored.", max_length=30, verbose_name='Annotation ID Gloss')),
                ('bsltf', models.NullBooleanField(verbose_name='BSL sign')),
                ('asltf', models.NullBooleanField(verbose_name='ASL sign')),
                ('aslgloss', models.CharField(blank=True, max_length=50, verbose_name='ASL gloss')),
                ('asloantf', models.NullBooleanField(verbose_name='ASL loan sign')),
                ('bslgloss', models.CharField(blank=True, max_length=50, verbose_name='BSL gloss')),
                ('bslloantf', models.NullBooleanField(verbose_name='BSL loan sign')),
                ('regional_template', models.CharField(blank=True, default='', help_text='\n    Enter the URL of a page to display on the regional view of this gloss or blank for a standard template', max_length=50, verbose_name='Regional Template')),
                ('blend', models.CharField(blank=True, max_length=100, null=True, verbose_name='Blend of')),
                ('blendtf', models.NullBooleanField(verbose_name='Blend')),
                ('compound', models.CharField(blank=True, max_length=100, verbose_name='Compound of')),
                ('comptf', models.NullBooleanField(verbose_name='Compound')),
                ('domhndsh', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('0.0', 'N/A'), ('0.1', 'Round'), ('0.2', 'Okay'), ('1.1', 'Point'), ('1.2', 'Hook'), ('2.1', 'Two'), ('2.2', 'Kneel'), ('2.3', 'Perth'), ('2.4', 'Spoon'), ('2.5', 'Letter-n'), ('2.6', 'Wish'), ('3.1', 'Three'), ('3.2', 'Mother'), ('3.3', 'Letter-m'), ('4.1', 'Four'), ('5.1', 'Spread'), ('5.2', 'Ball'), ('5.3', 'Flat'), ('5.4', 'Thick'), ('5.5', 'Cup'), ('6.1', 'Good'), ('6.2', 'Bad'), ('7.1', 'Gun'), ('7.2', 'Letter-c'), ('7.3', 'Small'), ('7.4', 'Seven'), ('8.1', 'Eight'), ('9.1', 'Nine'), ('10.1', 'Fist'), ('10.2', 'Soon'), ('10.3', 'Ten'), ('11.1', 'Write'), ('12.1', 'Salt'), ('13.1', 'Middle'), ('14.1', 'Rude'), ('15.1', 'Ambivalent'), ('16.1', 'Love'), ('17.1', 'Animal'), ('18.1', 'Queer')], max_length=5, null=True, verbose_name='Initial Dominant Handshape')),
                ('subhndsh', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('0.0', 'N/A'), ('0.1', 'Round'), ('0.2', 'Okay'), ('1.1', 'Point'), ('1.2', 'Hook'), ('2.1', 'Two'), ('2.2', 'Kneel'), ('2.3', 'Perth'), ('2.4', 'Spoon'), ('2.5', 'Letter-n'), ('2.6', 'Wish'), ('3.1', 'Three'), ('3.2', 'Mother'), ('3.3', 'Letter-m'), ('4.1', 'Four'), ('5.1', 'Spread'), ('5.2', 'Ball'), ('5.3', 'Flat'), ('5.4', 'Thick'), ('5.5', 'Cup'), ('6.1', 'Good'), ('6.2', 'Bad'), ('7.1', 'Gun'), ('7.2', 'Letter-c'), ('7.3', 'Small'), ('7.4', 'Seven'), ('8.1', 'Eight'), ('9.1', 'Nine'), ('10.1', 'Fist'), ('10.2', 'Soon'), ('10.3', 'Ten'), ('11.1', 'Write'), ('12.1', 'Salt'), ('13.1', 'Middle'), ('14.1', 'Rude'), ('15.1', 'Ambivalent'), ('16.1', 'Love'), ('17.1', 'Animal'), ('18.1', 'Queer')], max_length=5, null=True, verbose_name='Initial Subordinate Handshape')),
                ('final_domhndsh', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('0.0', 'N/A'), ('0.1', 'Round'), ('0.2', 'Okay'), ('1.1', 'Point'), ('1.2', 'Hook'), ('2.1', 'Two'), ('2.2', 'Kneel'), ('2.3', 'Perth'), ('2.4', 'Spoon'), ('2.5', 'Letter-n'), ('2.6', 'Wish'), ('3.1', 'Three'), ('3.2', 'Mother'), ('3.3', 'Letter-m'), ('4.1', 'Four'), ('5.1', 'Spread'), ('5.2', 'Ball'), ('5.3', 'Flat'), ('5.4', 'Thick'), ('5.5', 'Cup'), ('6.1', 'Good'), ('6.2', 'Bad'), ('7.1', 'Gun'), ('7.2', 'Letter-c'), ('7.3', 'Small'), ('7.4', 'Seven'), ('8.1', 'Eight'), ('9.1', 'Nine'), ('10.1', 'Fist'), ('10.2', 'Soon'), ('10.3', 'Ten'), ('11.1', 'Write'), ('12.1', 'Salt'), ('13.1', 'Middle'), ('14.1', 'Rude'), ('15.1', 'Ambivalent'), ('16.1', 'Love'), ('17.1', 'Animal'), ('18.1', 'Queer')], max_length=5, null=True, verbose_name='Final Dominant Handshape')),
                ('final_subhndsh', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('0.0', 'N/A'), ('0.1', 'Round'), ('0.2', 'Okay'), ('1.1', 'Point'), ('1.2', 'Hook'), ('2.1', 'Two'), ('2.2', 'Kneel'), ('2.3', 'Perth'), ('2.4', 'Spoon'), ('2.5', 'Letter-n'), ('2.6', 'Wish'), ('3.1', 'Three'), ('3.2', 'Mother'), ('3.3', 'Letter-m'), ('4.1', 'Four'), ('5.1', 'Spread'), ('5.2', 'Ball'), ('5.3', 'Flat'), ('5.4', 'Thick'), ('5.5', 'Cup'), ('6.1', 'Good'), ('6.2', 'Bad'), ('7.1', 'Gun'), ('7.2', 'Letter-c'), ('7.3', 'Small'), ('7.4', 'Seven'), ('8.1', 'Eight'), ('9.1', 'Nine'), ('10.1', 'Fist'), ('10.2', 'Soon'), ('10.3', 'Ten'), ('11.1', 'Write'), ('12.1', 'Salt'), ('13.1', 'Middle'), ('14.1', 'Rude'), ('15.1', 'Ambivalent'), ('16.1', 'Love'), ('17.1', 'Animal'), ('18.1', 'Queer')], max_length=5, null=True, verbose_name='Final Subordinate Handshape')),
                ('locprim', models.IntegerField(blank=True, choices=[(-1, 'No Value Set'), (0, 'N/A'), (1, 'Top of head'), (2, 'Forehead'), (3, 'Temple'), (4, 'Eye'), (5, 'Nose'), (6, 'Whole of face'), (7, 'Cheekbone'), (8, 'Ear or side of head'), (9, 'Cheek'), (10, 'Mouth and lips'), (11, 'Chin'), (12, 'Neck'), (13, 'Shoulder'), (14, 'Chest'), (28, 'High neutral space'), (15, 'Stomach'), (29, 'Neutral space'), (16, 'Waist'), (17, 'Below waist'), (18, 'Upper arm'), (19, 'Elbow'), (20, 'Pronated forearm'), (21, 'Supinated forearm'), (22, 'Pronated wrist'), (23, 'Spinated wrist'), (24, 'Back of hand'), (25, 'Palm'), (26, 'Edge of hand'), (27, 'Fingertips')], null=True, verbose_name='Initial Primary Location')),
                ('final_loc', models.IntegerField(blank=True, choices=[(-1, 'No Value Set'), (0, 'N/A'), (1, 'Top of head'), (2, 'Forehead'), (3, 'Temple'), (4, 'Eye'), (5, 'Nose'), (6, 'Whole of face'), (7, 'Cheekbone'), (8, 'Ear or side of head'), (9, 'Cheek'), (10, 'Mouth and lips'), (11, 'Chin'), (12, 'Neck'), (13, 'Shoulder'), (14, 'Chest'), (28, 'High neutral space'), (15, 'Stomach'), (29, 'Neutral space'), (16, 'Waist'), (17, 'Below waist'), (18, 'Upper arm'), (19, 'Elbow'), (20, 'Pronated forearm'), (21, 'Supinated forearm'), (22, 'Pronated wrist'), (23, 'Spinated wrist'), (24, 'Back of hand'), (25, 'Palm'), (26, 'Edge of hand'), (27, 'Fingertips')], null=True, verbose_name='Final Primary Location')),
                ('locsecond', models.IntegerField(blank=True, choices=[(-1, 'No Value Set'), (0, 'N/A'), (1, 'Top of head'), (2, 'Forehead'), (3, 'Temple'), (4, 'Eye'), (5, 'Nose'), (6, 'Whole of face'), (7, 'Cheekbone'), (8, 'Ear or side of head'), (9, 'Cheek'), (10, 'Mouth and lips'), (11, 'Chin'), (12, 'Neck'), (13, 'Shoulder'), (14, 'Chest'), (28, 'High neutral space'), (15, 'Stomach'), (29, 'Neutral space'), (16, 'Waist'), (17, 'Below waist'), (18, 'Upper arm'), (19, 'Elbow'), (20, 'Pronated forearm'), (21, 'Supinated forearm'), (22, 'Pronated wrist'), (23, 'Spinated wrist'), (24, 'Back of hand'), (25, 'Palm'), (26, 'Edge of hand'), (27, 'Fingertips')], null=True, verbose_name='Secondary Location')),
                ('initial_secondary_loc', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('0', 'N/A'), ('back', 'Back'), ('palm', 'Palm'), ('radial', 'Radial'), ('ulnar', 'Ulnar'), ('fingertip(s)', 'Fingertips'), ('root', 'Root')], max_length=20, null=True, verbose_name='Initial Subordinate Location')),
                ('final_secondary_loc', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('0', 'N/A'), ('back', 'Back'), ('palm', 'Palm'), ('radial', 'Radial'), ('ulnar', 'Ulnar'), ('fingertip(s)', 'Fingertips'), ('root', 'Root')], max_length=20, null=True, verbose_name='Final Subordinate Location')),
                ('initial_palm_orientation', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('prone', 'Prone'), ('neutral', 'Neutral'), ('supine', 'Supine'), ('0', 'N/A')], max_length=20, null=True, verbose_name='Initial Palm Orientation')),
                ('final_palm_orientation', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('prone', 'Prone'), ('neutral', 'Neutral'), ('supine', 'Supine'), ('0', 'N/A')], max_length=20, null=True, verbose_name='Final Palm Orientation')),
                ('initial_relative_orientation', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('palm', 'Palm'), ('back', 'Back'), ('root', 'Root'), ('radial', 'Radial'), ('ulnar', 'Ulnar'), ('fingertip(s)', 'Fingertips'), ('elbow', 'Elbow'), ('0', 'N/A')], max_length=20, null=True, verbose_name='Initial Interacting Dominant Hand Part')),
                ('final_relative_orientation', models.CharField(blank=True, choices=[('notset', 'No Value Set'), ('palm', 'Palm'), ('back', 'Back'), ('root', 'Root'), ('radial', 'Radial'), ('ulnar', 'Ulnar'), ('fingertip(s)', 'Fingertips'), ('elbow', 'Elbow'), ('0', 'N/A')], max_length=20, null=True, verbose_name='Final Interacting Dominant Hand Part')),
                ('inWeb', models.NullBooleanField(default=False, verbose_name='In the Web dictionary')),
                ('isNew', models.NullBooleanField(default=False, verbose_name='Is this a proposed new sign?')),
                ('inittext', models.CharField(blank=True, max_length=50)),
                ('morph', models.CharField(blank=True, max_length=50, verbose_name='Morphemic Analysis')),
                ('sedefinetf', models.TextField(blank=True, null=True, verbose_name='Signed English definition available')),
                ('segloss', models.CharField(blank=True, max_length=50, null=True, verbose_name='Signed English gloss')),
                ('sense', models.IntegerField(blank=True, help_text='If there is more than one sense of a sign enter a number here, all signs with sense>1 will use the same video as sense=1', null=True, verbose_name='Sense Number')),
                ('sn', models.IntegerField(blank=True, help_text='Sign Number must be a unique integer and defines the ordering of signs in the dictionary', null=True, unique=True, verbose_name='Sign Number')),
                ('StemSN', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['idgloss'],
                'verbose_name_plural': 'Glosses',
                'permissions': (('update_video', 'Can Update Video'), ('search_gloss', 'Can Search/View Full Gloss Details'), ('export_csv', 'Can export sign details as CSV'), ('can_publish', 'Can publish signs and definitions'), ('can_delete_unpublished', 'Can delete unpub signs or defs'), ('can_delete_published', 'Can delete pub signs and defs'), ('view_advanced_properties', 'Include all properties in sign detail view'), ('can_view_unpub_defs', 'Can view unpublished defs')),
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.TextField()),
                ('traditional', models.BooleanField(default=False)),
                ('dialect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Dialect')),
                ('gloss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Gloss')),
            ],
            options={
                'ordering': ['gloss', 'dialect', 'frequency', 'traditional'],
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['source'],
            },
        ),
        migrations.CreateModel(
            name='Relationrole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=20)),
                ('forwardmessage', models.CharField(max_length=20)),
                ('backwardmessage', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(verbose_name='Index')),
                ('gloss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Gloss')),
                ('translation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Keyword')),
            ],
            options={
                'ordering': ['gloss', 'index'],
            },
        ),
        migrations.AddField(
            model_name='relation',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='dictionary.Relationrole'),
        ),
        migrations.AddField(
            model_name='relation',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_sources', to='dictionary.Gloss'),
        ),
        migrations.AddField(
            model_name='relation',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_targets', to='dictionary.Gloss'),
        ),
        migrations.AddField(
            model_name='gloss',
            name='dialect',
            field=models.ManyToManyField(through='dictionary.Region', to='dictionary.Dialect'),
        ),
        migrations.AddField(
            model_name='gloss',
            name='language',
            field=models.ManyToManyField(to='dictionary.Language'),
        ),
        migrations.AddField(
            model_name='dialect',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Language'),
        ),
        migrations.AddField(
            model_name='definition',
            name='gloss',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Gloss'),
        ),
    ]
